{"version":3,"sources":["components/Nav.js","images/display.gif","App.js","setting.js","reportWebVitals.js","index.js"],"names":["Nav","connectWallet","disconnectWallet","ethAddress","toast","useToast","class","flexDirection","onClick","navigator","clipboard","writeText","then","description","status","duration","slice","length","color","fontWeight","fontSize","maxWidth","colorScheme","size","App","ethWindow","window","ethereum","useState","undefined","contract","setContract","setEthAddress","totalSupply","setTotalSupply","mintAmount","latestTx","setlatestTx","nftUrl","osLink","setOsLink","useDisclosure","isOpen","onOpen","onClose","a","provider","request","method","accounts","catch","err","console","log","loadBlockchain","web3","Web3","eth","Contract","MintingContract","abi","useEffect","getSupply","methods","currentSupply","call","supply","Content","styled","div","InfoRow","InfoBox","IconRow","p","className","Number","href","target","rel","src","alt","layout","alert","motionPreset","blockScrollOnMount","align","alignItems","display","boxSize","fallbackSrc","pb","pt","isExternal","offset","alignSelf","mx","mr","id","spacing","number","value","buyFlys","send","from","tx","transactionHash","to","events","Transfer","returnValues","tokenId","GiveawayFlys","mintGiveawayFlys","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","initialColorMode","document","getElementById"],"mappings":"8yNAgDeA,I,UAAAA,EAzCf,YAA+D,IAAhDC,EAA+C,EAA/CA,cAAeC,EAAgC,EAAhCA,iBAAkBC,EAAc,EAAdA,WACxCC,EAAQC,cAEd,OACE,qBAAKC,MAAM,iCAAX,SAEE,eAAC,IAAD,CAAQC,cAAc,SAAtB,UACkB,KAAfJ,EACC,eAAC,IAAD,CACEK,QAAS,WACPC,UAAUC,UAAUC,UAAUR,GAAYS,KACxCR,EAAM,CACJS,YAAa,kBACbC,OAAQ,UACRC,SAAU,QANlB,UAWGZ,EAAWa,MAAM,EAAG,GAXvB,MAYGb,EAAWa,MAAMb,EAAWc,OAAS,EAAGd,EAAWc,WAGtD,GAEc,KAAfd,EACC,cAAC,IAAD,CACEe,MAAM,QACNC,WAAW,OACXC,SAAS,SACTC,SAAS,OACTC,YAAY,OAAOC,KAAK,KAAKf,QAAS,kBAAMN,KAL9C,wBAOA,cAAC,IAAD,CAAQoB,YAAY,OAAOC,KAAK,KAAKf,QAAS,kBAAMP,KAApD,2B,YCxCK,I,4EC8ZAuB,MAxWf,WACE,IAAIC,EAAYC,OAAOC,SADV,EAGmBC,wBAASC,GAH5B,mBAGNC,EAHM,KAGIC,EAHJ,OAIuBH,mBAAS,IAJhC,mBAINzB,EAJM,KAIM6B,EAJN,OAKyBJ,mBAAS,GALlC,mBAKNK,EALM,KAKOC,EALP,OAMuBN,mBAAS,GANhC,mBAMNO,EANM,aAOmBP,mBAAS,KAP5B,mBAONQ,EAPM,KAOIC,EAPJ,OAQeT,mBAAS,IARxB,mBAQNU,EARM,aASeV,mBAAS,KATxB,mBASNW,EATM,KASEC,EATF,OAWuBC,cAA5BC,EAXK,EAWLA,OAAQC,EAXH,EAWGA,OAAQC,EAXX,EAWWA,QAIlB3C,GAAa,uCAAG,4BAAA4C,EAAA,sDAGI,qBAFpBC,EAAWpB,OAAOC,WAKpBmB,EACGC,QAAQ,CAAEC,OAAQ,wBAClBpC,MAAK,SAACqC,GACLjB,EAAciB,EAAS,OAExBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAZE,2CAAH,qDAsBbG,GAAc,uCAAG,gCAAAT,EAAA,sDACjBC,EAAWpB,OAAOC,SAChB4B,EAAO,IAAIC,IAAKV,GAEhBhB,EAAW,IAAIyB,EAAKE,IAAIC,SAC5BC,EAAgBC,IAxCK,8CA2CvB7B,EAAYD,GARS,2CAAH,qDAWpB+B,qBAAU,WACRC,QAKFD,qBAAU,WAGR5D,KACAqD,OACC,CAAC7B,IAIJ,IAqDMqC,GAAY,gBACCjC,IAAbC,GAAyC,KAAf3B,GAC5B2B,EAASiC,QACNC,gBACAC,OACArD,MAAK,SAACsD,GACLhC,EAAegC,MAIhBhB,OAAM,SAACC,GACNC,QAAQC,IAAIF,OA4BdgB,GAAUC,IAAOC,IAAV,oJASPC,GAAUF,IAAOC,IAAV,iJASPE,GAAUH,IAAOC,IAAV,8VAkBPG,GAAUJ,IAAOC,IAAV,8LAsBb,OAZ8BD,IAAOK,EAAV,2GAiBzB,sBAAKC,UAAU,UAAf,UAGE,cAAC,IAAD,CAAMA,UAAU,OAAhB,SAEE,eAACP,GAAD,CAASO,UAAU,SAAnB,UACE,cAAC,IAAD,CACEA,UAAU,QADZ,SCzQgB,oBD+QhB,eAACJ,GAAD,WAEE,eAACC,GAAD,CAASG,UAAU,SAAnB,UACE,4CACA,4BAAIC,OAAO,SAGb,eAACH,GAAD,CAASE,UAAU,QAAnB,UACE,mBAAGE,KAAK,IAAIC,OAAO,SAASC,IAAI,sBAAhC,SACE,cAAC,IAAD,MAEF,mBAAGF,KAAK,IAAIC,OAAO,SAASC,IAAI,sBAAhC,SACE,cAAE,IAAF,MAEF,mBAAGF,KAAK,IAAIC,OAAO,SAASC,IAAI,sBAAhC,SACE,cAAC,IAAD,YC7RqB,yODsS/B,8BAEE,cAAC,IAAD,CAAMJ,UAAU,MAAhB,SACE,cAAC,IAAD,CACEK,IC9SS,gBD+STC,IAAI,gBACJC,OAAO,mBAKb,gCACE,cAAC,EAAD,CACEhF,cAAeA,GACfC,iBA5OiB,WACvB8B,EAAc,IACdkD,MAAM,iBA2OA/E,WAAYA,IAId,mCACE,eAAC,IAAD,CAEEgF,aAAa,gBACbC,oBAAoB,EACpB1C,OAAQA,EACRE,QAASA,EALX,UAOE,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAayC,MAAM,SAAnB,+BACA,cAAC,IAAD,IACA,eAAC,IAAD,CACEC,WAAW,QACXC,QAAQ,OACRhF,cAAc,SAHhB,UAKE,cAAC,IAAD,CACEwE,IAAKzC,EACLkD,QAAQ,MACRH,MAAM,SACNI,YAAY,wCACZC,GAAG,IACHC,GAAG,MAEL,eAAC,IAAD,CACEf,KAAM,mCAAqCxC,EAC3CwD,YAAU,EACVC,OAAO,IACPC,UAAU,SACVH,GAAG,IALL,+BAOoB,cAAC,IAAD,CAAkBI,GAAG,WAGzC,eAAC,IAAD,CACEnB,KAAMrC,EACNqD,YAAU,EACVC,OAAO,IACPC,UAAU,SACVH,GAAG,IALL,6BAOkB,cAAC,IAAD,CAAkBI,GAAG,cAIzC,cAAC,IAAD,UACE,cAAC,IAAD,CAAQzE,YAAY,QAAQ0E,GAAI,EAAGxF,QAASoC,EAASrB,KAAK,KAA1D,6BAOR,sBAAK0E,GAAG,UAAR,UAKE,eAAC,IAAD,CAAMvB,UAAU,aAAhB,UAEE,eAAC,IAAD,CAAOwB,QAAS,EAAhB,UACE,eAAC,IAAD,CAAQ5E,YAAY,OAAOC,KAAK,KAAKf,QAAS,kBAhR1C,SAAC2F,GACf,QAAiBtE,IAAbC,GAAyC,KAAf3B,EAAmB,CAC/C,IAAIiG,EAAiB,IAATD,EAEZrE,EAASiC,QACNsC,QAAQF,GACRG,KAAK,CAAEC,KAAMpG,EAAYiG,MAAOA,IAChCxF,MAAK,SAAC4F,GACLpD,QAAQC,IAAImD,GACZnE,EAAYmE,EAAGC,iBACfjE,EACE,6BACAgE,EAAGE,GACH,IACAF,EAAGG,OAAOC,SAASC,aAAaC,SAElC1D,QAAQC,IAAId,GACZI,IACAmB,QAEDZ,OAAM,SAACC,GACNC,QAAQC,IAAIF,OA2P4CkD,CAAQlE,IAA5D,oBAAiF,cAAC,IAAD,IAAjF,WADF,OAMA,cAAC,IAAD,CAAQb,YAAY,OAAOC,KAAK,KAAKf,QAAS,kBA5P/B,SAAC2F,GACxB,QAAiBtE,IAAbC,GAAyC,KAAf3B,EAAmB,CAC/C,IAAIiG,EAAiB,IAATD,EAEZrE,EAASiC,QACNgD,aAAaZ,GACbG,KAAK,CAAEC,KAAMpG,EAAYiG,MAAOA,IAChCxF,MAAK,SAAC4F,GACLpD,QAAQC,IAAImD,GACZnE,EAAYmE,EAAGC,iBACfjE,EACE,6BACAgE,EAAGE,GACH,IACAF,EAAGG,OAAOC,SAASC,aAAaC,SAElC1D,QAAQC,IAAId,GACZI,IACAmB,QAEDZ,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAuO0C6D,CAAiB7E,IAArE,8BACA,cAAC,IAAD,OAEF,cAAC,IAAD,CACEZ,KAAK,KAELoE,GAAG,IAHL,mBAIK1D,EAJL,cA7UU,kBEpDLgF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBvG,MAAK,YAAkD,IAA/CwG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,kBCCdO,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,IAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAiBC,iBAAiB,SAElC,cAAC,EAAD,UAGJC,SAASC,eAAe,SAO1Bb,M","file":"static/js/main.094f4b65.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Button,\r\n  HStack,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\n\r\nfunction Nav({ connectWallet, disconnectWallet, ethAddress }) {\r\n  const toast = useToast();\r\n\r\n  return (\r\n    <div class=\"Aligner-item Aligner-item--top\">\r\n\r\n      <HStack flexDirection=\"column\"  >\r\n        {ethAddress !== \"\" ? (\r\n          <Button\r\n            onClick={() => {\r\n              navigator.clipboard.writeText(ethAddress).then(\r\n                toast({\r\n                  description: \"Address copied.\",\r\n                  status: \"success\",\r\n                  duration: 1000,\r\n                })\r\n              );\r\n            }}\r\n          >\r\n            {ethAddress.slice(0, 6)}...\r\n            {ethAddress.slice(ethAddress.length - 4, ethAddress.length)}\r\n          </Button>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {ethAddress !== \"\" ? (\r\n          <Button\r\n            color=\"white\"\r\n            fontWeight=\"bold\"\r\n            fontSize=\"1.5rem\"\r\n            maxWidth=\"100%\"\r\n            colorScheme='teal' size='lg' onClick={() => disconnectWallet()}>disconnect</Button>\r\n        ) : (\r\n          <Button colorScheme='teal' size='lg' onClick={() => connectWallet()}>connect</Button>\r\n        )}\r\n\r\n      </HStack>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","export default __webpack_public_path__ + \"static/media/display.1a1eb67c.gif\";","import \"./App.css\";\r\nimport Web3 from \"web3\";\r\nimport Nav from \"./components/Nav\";\r\nimport MintingContract from \"./MintingContract.json\";\r\nimport { useEffect, useState, } from \"react\";\r\nimport images from \"../src/images/display.gif\";\r\nimport { HeadProvider } from 'react-head';\r\nimport { image, headerText, collectionDescription, mintText } from './setting'\r\nimport styled from \"styled-components\";\r\nimport { CiGlobe, CiTwitter } from \"react-icons/ci\";\r\nimport { FaDiscord } from \"react-icons/fa\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport {\r\n  Center,\r\n  Box,\r\n  Head,\r\n  Image,\r\n  Button,\r\n  HStack,\r\n  VStack,\r\n  Heading,\r\n  Flex,\r\n\r\n\r\n  Link,\r\n  Card,\r\n  CardBody,\r\n  StackDivider,\r\n  Stack,\r\n  useToast,\r\n  Text,\r\n  useDisclosure,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n\r\n\r\n  ModalCloseButton,\r\n\r\n  useMediaQuery,\r\n  Progress,\r\n\r\n} from \"@chakra-ui/react\";\r\n\r\nimport {\r\n  ExternalLinkIcon,\r\n} from \"@chakra-ui/icons\";\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  let ethWindow = window.ethereum;\r\n  const CONTRACT_ADDRESS = \"0x77C9e7733550026AcE28950e973681C0F74191E3\";\r\n  const [contract, setContract] = useState(undefined);\r\n  const [ethAddress, setEthAddress] = useState(\"\");\r\n  const [totalSupply, setTotalSupply] = useState(0);\r\n  const [mintAmount, setMintAmount] = useState(1);\r\n  const [latestTx, setlatestTx] = useState(\"\");\r\n  const [nftUrl, setNftUrl] = useState(\"\");\r\n  const [osLink, setOsLink] = useState(\"\");\r\n  const totalNfts = 8888;\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  // metamask related function\r\n\r\n  const connectWallet = async () => {\r\n    let provider = window.ethereum;\r\n\r\n    if (typeof provider !== \"undefined\") {\r\n      // MetaMask is installed\r\n\r\n      provider\r\n        .request({ method: \"eth_requestAccounts\" })\r\n        .then((accounts) => {\r\n          setEthAddress(accounts[0]);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const disconnectWallet = () => {\r\n    setEthAddress(\"\");\r\n    alert(\"disconnected\");\r\n  };\r\n\r\n  const loadBlockchain = async () => {\r\n    let provider = window.ethereum;\r\n    const web3 = new Web3(provider);\r\n\r\n    const contract = new web3.eth.Contract(\r\n      MintingContract.abi,\r\n      CONTRACT_ADDRESS\r\n    );\r\n    setContract(contract);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSupply();\r\n  });\r\n\r\n  //set nftShowcaseToggle to \"true\" to enable the showcase component (dev only)\r\n  const nftShowcaseToggle = false;\r\n  useEffect(() => {\r\n    // uncomment nftShowcase() for nft showcase\r\n    // nftShowcase();\r\n    connectWallet();\r\n    loadBlockchain();\r\n  }, [ethWindow]);\r\n\r\n  // minting function\r\n\r\n  const buyFlys = (number) => {\r\n    if (contract !== undefined && ethAddress !== \"\") {\r\n      var value = number * 20000000;\r\n\r\n      contract.methods\r\n        .buyFlys(number)\r\n        .send({ from: ethAddress, value: value })\r\n        .then((tx) => {\r\n          console.log(tx);\r\n          setlatestTx(tx.transactionHash);\r\n          setOsLink(\r\n            \"https://opensea.io/assets/\" +\r\n            tx.to +\r\n            \"/\" +\r\n            tx.events.Transfer.returnValues.tokenId\r\n          );\r\n          console.log(osLink);\r\n          onOpen();\r\n          getSupply();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n  const mintGiveawayFlys = (number) => {\r\n    if (contract !== undefined && ethAddress !== \"\") {\r\n      var value = number * 20000000;\r\n\r\n      contract.methods\r\n        .GiveawayFlys(number)\r\n        .send({ from: ethAddress, value: value })\r\n        .then((tx) => {\r\n          console.log(tx);\r\n          setlatestTx(tx.transactionHash);\r\n          setOsLink(\r\n            \"https://opensea.io/assets/\" +\r\n            tx.to +\r\n            \"/\" +\r\n            tx.events.Transfer.returnValues.tokenId\r\n          );\r\n          console.log(osLink);\r\n          onOpen();\r\n          getSupply();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  // getting total nft supply function\r\n\r\n  const getSupply = () => {\r\n    if (contract !== undefined && ethAddress !== \"\") {\r\n      contract.methods\r\n        .currentSupply()\r\n        .call()\r\n        .then((supply) => {\r\n          setTotalSupply(supply);\r\n          // console.log(supply);\r\n        })\r\n\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  // uncomment this function if you want to enable showcasing nfts from a selected NFT collection (using fidenza as an example here)\r\n  // function nftShowcase() {\r\n  //   between(1, 998);\r\n  //   setTimeout(nftShowcase, 5000);\r\n  // }\r\n\r\n  function between(min, max) {\r\n    const tokenGen = Math.floor(Math.random() * (max - min + 1) + min);\r\n    let tokenID = \"\";\r\n\r\n    if (tokenGen <= 10) {\r\n      tokenID = tokenGen <= 10 ? tokenGen : \"00\" + tokenGen;\r\n    } else {\r\n      tokenID = tokenGen >= 100 ? tokenGen : \"0\" + tokenGen;\r\n    }\r\n\r\n    // console.log(tokenGen);\r\n    console.log(tokenID);\r\n    setNftUrl(\"https://media.artblocks.io/78000\" + tokenID + \".png\");\r\n\r\n    return;\r\n  }\r\n\r\n  const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  padding: 0px;\r\n  gap: 32px;\r\n  width: 100%;\r\n`;\r\n\r\n  const InfoRow = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\nalign-items: center;\r\nwidth: 100%;\r\npadding: 0;\r\ngap: 16px;\r\nflex-wrap: wrap;\r\n`;\r\n  const InfoBox = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\nalign-items: flex-start;\r\npadding: 10px 16px;\r\ngap: 8px;\r\nborder: 2px solid #ffffff;\r\nborder-radius: 4px;\r\nfont-weight: 600;\r\nfont-size: 20px;\r\nline-height: 100%;\r\ntext-transform: uppercase;\r\ncolor: var(--white);\r\n\r\n@media only screen and (max-width: 450px) {\r\n  font-size: 18px;\r\n}\r\n`;\r\n  const IconRow = styled.div`\r\ndisplay: flex;\r\njustify-content: space-between;\r\nflex-direction: row;\r\nalign-items: center;\r\npadding: 0px;\r\ngap: 24px;\r\nmargin-bottom: -3px;\r\nmargin-left: 1rem;\r\n`;\r\n  const CollectionDescription = styled.p`\r\nfont-weight: 400;\r\nfont-size: 20px;\r\nline-height: 150%;\r\nmargin-bottom: 1rem;\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n\r\n\r\n\r\n    <div className=\"display\">\r\n\r\n\r\n      <Flex className=\"flex\">\r\n\r\n        <Content className=\"night2\">\r\n          <Text\r\n            className=\"night\"\r\n          >\r\n            {headerText}\r\n          </Text>\r\n\r\n          <InfoRow>\r\n\r\n            <InfoBox className=\"night1\">\r\n              <p>Total items</p>\r\n              <p>{Number(30)}</p>\r\n            </InfoBox>\r\n\r\n            <IconRow className=\"icons\">\r\n              <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <CiGlobe></CiGlobe>\r\n              </a>\r\n              <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                < CiTwitter></ CiTwitter>\r\n              </a>\r\n              <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <FaDiscord></FaDiscord>\r\n              </a>\r\n            </IconRow>\r\n          </InfoRow>\r\n\r\n          {collectionDescription}\r\n\r\n        </Content >\r\n      </Flex>\r\n      <div>\r\n\r\n        <Flex className=\"img\" >\r\n          <Image\r\n            src={image}\r\n            alt=\"project Image\"\r\n            layout=\"responsive\"\r\n\r\n          />\r\n        </Flex>\r\n      </div>\r\n      <div>\r\n        <Nav\r\n          connectWallet={connectWallet}\r\n          disconnectWallet={disconnectWallet}\r\n          ethAddress={ethAddress}\r\n        />\r\n\r\n\r\n        <>\r\n          <Modal\r\n\r\n            motionPreset=\"slideInBottom\"\r\n            blockScrollOnMount={false}\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n          >\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n              <ModalHeader align=\"center\">Mint succsessfull</ModalHeader>\r\n              <ModalCloseButton />\r\n              <ModalBody\r\n                alignItems=\"cente\"\r\n                display=\"flex\"\r\n                flexDirection=\"column\"\r\n              >\r\n                <Image\r\n                  src={nftUrl}\r\n                  boxSize=\"50%\"\r\n                  align=\"center\"\r\n                  fallbackSrc=\"https://via.placeholder.com/2000x2400\"\r\n                  pb=\"6\"\r\n                  pt=\"6\"\r\n                />\r\n                <Link\r\n                  href={\"https://ropsten.etherscan.io/tx/\" + latestTx}\r\n                  isExternal\r\n                  offset=\"2\"\r\n                  alignSelf=\"center\"\r\n                  pt=\"3\"\r\n                >\r\n                  View on etherscan <ExternalLinkIcon mx=\"2px\" />\r\n                </Link>\r\n\r\n                <Link\r\n                  href={osLink}\r\n                  isExternal\r\n                  offset=\"2\"\r\n                  alignSelf=\"center\"\r\n                  pt=\"6\"\r\n                >\r\n                  View on OpenSea <ExternalLinkIcon mx=\"2px\" />\r\n                </Link>\r\n              </ModalBody>\r\n\r\n              <ModalFooter>\r\n                <Button colorScheme=\"white\" mr={3} onClick={onClose} size=\"sm\">\r\n                  Close\r\n                </Button>\r\n              </ModalFooter>\r\n            </ModalContent>\r\n          </Modal>\r\n        </>\r\n        <div id=\"wrapper\">\r\n\r\n\r\n\r\n\r\n          <Flex className=\"mintbutton\"   >\r\n\r\n            <Stack spacing={4}  >\r\n              <Button colorScheme='teal' size='lg' onClick={() => buyFlys(mintAmount)} >       <Text\r\n\r\n\r\n\r\n              ></Text> Mint</Button> </Stack>\r\n            <Button colorScheme='teal' size='lg' onClick={() => mintGiveawayFlys(mintAmount)} >  Whitelist Mint</Button>\r\n            <HStack></HStack>\r\n          </Flex>\r\n          <Heading\r\n            size=\"sm\"\r\n            // mt=\"5\"\r\n            pt=\"4\"\r\n          >{`${totalSupply} / ${totalNfts}`}</Heading>\r\n\r\n\r\n        </div >\r\n\r\n      </div >\r\n\r\n\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","// Purpose: Contains texts that will be used in the UI when rendering the buttons\r\n// label has to be the exact same as in your candy machine config\r\n\r\nexport const mintText = [\r\n    { label: \"WL\", mintText: \"Only users who are whitelisted can mint!\", buttonLabel: \"Mint now!\", buttonDisabledLabel: \"Mint now!\", header: \"WL Mint\" },\r\n    { label: \"default\", mintText: \"default mint paying with SOL\", buttonLabel: \"Mint now!\", buttonDisabledLabel: \"Mint now!\", header: \"default Mint\" },\r\n    { label: \"Public\", mintText: \"Public mint! All users can mint\", buttonLabel: \"Mint now!\", buttonDisabledLabel: \"Mint now!\", header: \"public\" }\r\n];\r\n\r\n//header image in the ui. replace with your own\r\nexport const image = \"./display.gif\";\r\n\r\n//website title\r\nexport const headerText = \"COLLECTION NAME\";\r\nexport const collectionDescription = \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Rem minima velit aliquid voluptates quasi placeat corporis dicta maxime. Ad, similique. Veritatis corrupti eveniet eligendi ratione autem. Dolores cumque dolorem harum.\";","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { ChakraProvider, ColorModeScript } from \"@chakra-ui/react\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ChakraProvider  >\r\n    </ChakraProvider>\r\n    <ChakraProvider>\r\n      <ColorModeScript initialColorMode=\"dark\" />\r\n\r\n      <App />\r\n    </ChakraProvider>\r\n  </React.StrictMode >,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}