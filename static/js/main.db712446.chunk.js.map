{"version":3,"sources":["utils/interact.js","components/ReCaptach.js","components/Nav.js","App.js","setting.js","reportWebVitals.js","index.js"],"names":["connectWallet","async","window","ethereum","alert","address","addressArray","request","method","err","message","OutsideClickHandler","_ref","children","onOutsideClick","wrapperRef","useRef","handleClickOutside","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","_jsx","ref","ReCaptach","difference","moment","utc","Date","difference1","days","setDays","useState","hours","setHours","minutes","setMinutes","seconds","setSeconds","days1","setDays1","hours1","setHours1","minutes1","setMinutes1","seconds1","setSeconds1","text","setText","text1","setText1","verfied","setVerifed","id","setTimeout","Math","floor","clearTimeout","walletAddress","setWallet","show","setShow","tokenNumber","setTokenNumber","status","setStatus","supply","setSupply","quantity","setQuantity","open","setOpen","_jsxs","className","style","marginTop","border","borderRadius","padding","display","alignItems","justifyContent","fontWeight","concat","marginLeft","background","type","onClick","decreaseTokenNumber","Form","Label","color","handleOutsideClick","console","log","Nav","App","screenWidth","setScreenWidth","innerWidth","isCaptchaVerified","setCaptchaVerified","setwalletAdrress","handleResize","Content","styled","div","_templateObject","_taggedTemplateLiteral","InfoRow","_templateObject2","InfoBox","_templateObject3","IconRow","_templateObject4","CollectionDescription","p","_templateObject5","_Fragment","index","HStack","flexDirection","width","position","Button","fontSize","maxWidth","colorScheme","size","slice","length","left","right","top","params","eth_accounts","disconnectWallet","Flex","gap","marginBottom","maxHeight","Text","href","rel","FaGlobe","FaTwitter","FaDiscord","walletResponse","connectWalletPressed","Stack","divider","StackDivider","rounded","pos","ReCAPTCHA","sitekey","process","REACT_APP_RECAPTCHA_SITE_KEY","onChange","value","Image","src","alt","layout","height","minWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","ChakraProvider","ColorModeScript","initialColorMode","getElementById"],"mappings":"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","file":"static/js/main.db712446.chunk.js","sourcesContent":["export const connectWallet = async () => {\r\n  if (window.ethereum) {\r\n    try {\r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n      const obj = {\r\n        address: addressArray[0],\r\n      };\r\n      return obj;\r\n    } catch (err) {\r\n      alert(err.message);\r\n      return {\r\n        address: \"\",\r\n      };\r\n    }\r\n  } else {\r\n    alert(\"Metamask is not installed!\");\r\n    return {\r\n      address: \"\",\r\n    };\r\n  }\r\n};\r\nexport const disconnectWallet = async () => {\r\n  await window.ethereum.request({\r\n    method: \"eth_requestAccounts\",\r\n    params: [{ eth_accounts: {} }]\r\n  })\r\n};\r\nexport const getCurrentWalletConnected = async () => {\r\n  if (window.ethereum) {\r\n    try {\r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_accounts\",\r\n      });\r\n      if (addressArray.length > 0) {\r\n        return {\r\n          address: addressArray[0],\r\n        };\r\n      } else {\r\n        return {\r\n          address: \"\",\r\n        };\r\n      }\r\n    } catch (err) {\r\n      return {\r\n        address: \"\",\r\n      };\r\n    }\r\n  } else {\r\n    return {\r\n      address: \"\",\r\n    };\r\n  }\r\n};\r\n\r\n","import React, { useEffect, useState, useRef } from 'react';\nimport Web3 from 'web3';\nimport moment from 'moment';\nimport Form from \"react-bootstrap/Form\";\nimport MintingContract from '../MintingContract.json';\nimport { disconnectWallet, connectWallet, getCurrentWalletConnected } from \"../utils/interact.js\";\nimport {\n  Center,\n  Box,\n  Head,\n  Image,\n  Button,\n  HStack,\n  VStack,\n  Heading,\n  Flex,\n  Link,\n  Card,\n  CardBody,\n  StackDivider,\n  Stack,\n  useToast,\n  Text,\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useMediaQuery,\n  Progress,\n} from '@chakra-ui/react';\n\nconst OutsideClickHandler = ({ children, onOutsideClick }) => {\n  const wrapperRef = useRef(null);\n\n  const handleClickOutside = (event) => {\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n      // Clicked outside the specified element\n      onOutsideClick();\n    }\n  };\n\n  useEffect(() => {\n    // Attach the event listener when the component mounts\n    document.addEventListener('mousedown', handleClickOutside);\n\n    // Detach the event listener when the component unmounts\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [handleClickOutside]);\n\n  return <div ref={wrapperRef}>{children}</div>;\n};\n// const web3 = Web3;\n// const contract = web3.eth.Contract(contractABI, contractAddress);\n// const contractAddress = \"0xF9fC419822320D75a6BABae48721846516232cf7\";\n// const contractABI = require(\"../MintingContract.json\");\n// const mintNFT = async (amount, price) => {\n//   const { address } = await setTimeout();\n//   if (address === \"\") {\n//     return {\n//       success: false,\n//       status: \"❗Please make sure wallet connected.\",\n//     };\n//   } else {\n//     try {\n\n//       console.log(\"price: \" + amount * price);\n//       const estemated_Gas = await contract.methods.mint(amount).estimateGas({\n//         from: address,\n//         value: amount * price,\n//         maxPriorityFeePerGas: null,\n//         maxFeePerGas: null\n//       });\n//       console.log(estemated_Gas)\n//       console.log(\"Gas: \" + estemated_Gas)\n//       const result = await contract.methods.mint(amount).send({\n//         from: address,\n//         value: amount * price,\n//         gas: estemated_Gas,\n//         maxPriorityFeePerGas: null,\n//         maxFeePerGas: null\n//       })\n//         .on(\"confirmation\", function () {\n//           alert(\"Success\")\n//         })\n//         .on(\"error\", async function (error, receipt) {\n//           console.log(error);\n//         });\n//     } catch (e) {\n//     }\n//     return {\n//       status: \"\",\n//     };\n//   }\n// };\n\n\n\n\n\n\n\nconst ReCaptach = () => {\n  const difference = +new moment('2021-12-16 23:30').utc() - +new Date();\n  const difference1 = +new moment('2023-12-16 05:30').utc() - +new Date();\n  const [days, setDays] = useState(0);\n  const [hours, setHours] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [days1, setDays1] = useState(0);\n  const [hours1, setHours1] = useState(0);\n  const [minutes1, setMinutes1] = useState(0);\n  const [seconds1, setSeconds1] = useState(0);\n  const [text, setText] = useState(0);\n  const [text1, setText1] = useState(0);\n  const [verfied, setVerifed] = useState(false);\n\n\n\n\n  useEffect(() => {\n    const id = setTimeout(() => {\n      if (difference > 0) {\n        setDays(Math.floor(difference / (1000 * 60 * 60 * 24)));\n        setHours(Math.floor((difference / (1000 * 60 * 60)) % 24));\n        setMinutes(Math.floor((difference / 1000 / 60) % 60));\n        setSeconds(Math.floor((difference / 1000) % 60));\n\n\n        setText1(\"Ending in: \");\n\n\n      }\n\n      else {\n        setText1(\" Starting Soon\");\n        // setDays('Mints');\n        // setHours('Are');\n        // setMinutes('Closed');\n        // setSeconds('Now');\n      }\n      if (difference > 0) {\n        setDays(Math.floor(difference / (1000 * 60 * 60 * 24)));\n        setHours(Math.floor((difference / (1000 * 60 * 60)) % 24));\n        setMinutes(Math.floor((difference / 1000 / 60) % 60));\n        setSeconds(Math.floor((difference / 1000) % 60));\n        setText(\"Time Remaining: \");\n\n      }\n      else {\n        setText(\" Mints Will Start Soon \");\n        setDays('Mints');\n        setHours('Are');\n        setMinutes('Closed');\n        setSeconds('Now');\n      }\n\n      if (difference1 > 0) {\n        setDays1(Math.floor(difference1 / (1000 * 60 * 60 * 24)));\n        setHours1(Math.floor((difference1 / (1000 * 60 * 60)) % 24));\n        setMinutes1(Math.floor((difference1 / 1000 / 60) % 60));\n        setSeconds1(Math.floor((difference1 / 1000) % 60));\n      }\n      else {\n\n        setDays1('Wl Mints');\n        setHours1('are');\n        setMinutes1('Closed');\n        setSeconds1('Now');\n      }\n\n    }, 1000);\n\n\n\n    return () => {\n      clearTimeout(id);\n\n    };\n  });\n\n\n\n\n  //recaptcha function\n  function onChange(value) {\n    console.log('Captcha value:', value);\n    setVerifed(true);\n  }\n\n\n  const [walletAddress, setWallet] = useState(\"\");\n  const [show, setShow] = useState(\"false\");\n  const [tokenNumber, setTokenNumber] = useState(1);\n  const [status, setStatus] = useState(\"\");\n  const publicsale = true;\n  const [supply, setSupply] = useState(0);\n  const [quantity, setQuantity] = useState(0);\n  const [open, setOpen] = useState(false);\n  const handleClose = () => setShow(false);\n  const publicsale_price = 30000000000000000;\n\n  const handleShow = async () => {\n    setShow(true);\n  };\n\n  const onMintHandle = () => {\n    setStatus(\"Mint not allowed!\");\n  };\n\n  const decreaseTokenNumber = () => {\n    if (tokenNumber === 1) {\n      return;\n    }\n    setTokenNumber(tokenNumber - 1);\n  };\n\n  const onMintPressed = async () => {\n    const { status } = await (tokenNumber);\n    setStatus(status);\n  };\n\n\n\n  function addWalletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);\n        } else {\n          setWallet(\"\");\n        }\n      });\n    } else {\n    }\n  }\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setWallet(walletResponse.address);\n  };\n\n  const handleIncrement = () => {\n    if (quantity < 5) {\n      setQuantity((prev) => prev + 1);\n    }\n  };\n  const handleDecrement = () => {\n    if (quantity > 0) {\n      setQuantity((prev) => prev - 1);\n    }\n  };\n\n  const handleOutsideClick = () => {\n    console.log('Clicked outside!');\n    setOpen(!open);\n    // Add your logic for handling clicks outside the element\n  };\n\n  return (\n    <div className=\"container,display\" style={{ marginTop: 10 }}>\n\n      <div\n        style={{\n          border: '1px solid white',\n          borderRadius: '5px',\n          padding: '20px',\n        }}\n      >\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n          }}\n        >\n          <h1 style={{ fontWeight: 'bold' }}>WL MINT</h1>\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            {show ? ` ${text} ` : ` ${text1} `}\n            <div style={{ display: 'flex', marginLeft: '10px' }}>\n              <div\n                style={{\n                  background: 'blue',\n                  marginLeft: '7px',\n                  padding: '5px',\n                  borderRadius: '3px',\n                }}\n              >\n\n                {days < 10 ? `0${days}` : days}\n\n              </div>\n              <div\n                style={{\n                  background: 'blue',\n                  marginLeft: '7px',\n                  padding: '5px',\n                  borderRadius: '3px',\n                }}\n              >\n                {hours < 10 ? `0${hours}` : hours}\n\n              </div>\n              <div\n                style={{\n                  background: 'blue',\n                  marginLeft: '7px',\n                  padding: '5px',\n                  borderRadius: '3px',\n                }}\n              >\n                {minutes < 10 ? `0${minutes}` : minutes}\n\n              </div>\n              <div\n                style={{\n                  background: 'blue',\n                  marginLeft: '7px',\n                  padding: '5px',\n                  borderRadius: '3px',\n                }}\n              >\n                {seconds < 10 ? `0${seconds}` : seconds}\n                {/* {seconds ? (\n                  seconds === `${seconds}`\n                ) : (\n\n                  text\n                )} */}\n\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n        <div\n\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: '10px',\n          }}\n        >\n          <p>\n            Only users who are Whitelisted can mint!\n            <br />5 per wallet 0.01 SOL per NFT\n          </p>\n\n          <button\n          // style={{\n          //   background: 'blue',\n          //   borderRadius: '5px',\n          //   padding: '5px 7px',\n          //   color: 'white',\n\n          // }}\n\n          >\n\n            <div className=\"mint-number\">\n\n              <button type=\"button\" onClick={decreaseTokenNumber}>\n                <span aria-hidden=\"true\">-</span>\n              </button>\n              <Form>\n                <Form.Label>{tokenNumber}</Form.Label>\n                {status ? <div>{status}</div> : <div></div>}\n              </Form>\n              {tokenNumber < 5 ? (\n                <button\n                  type=\"button\"\n                  onClick={() => setTokenNumber(tokenNumber + 1)}\n                >\n                  <span aria-hidden=\"true\">+</span>\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  onClick={() => setTokenNumber(tokenNumber)}\n                >\n                  <span aria-hidden=\"true\">+</span>\n                </button>\n\n              )}\n\n            </div>\n            <button\n              style={{\n                background: 'blue',\n                borderRadius: '3px',\n                padding: '3px 5px',\n                color: 'white',\n              }}\n\n            >\n\n              Mint Now!\n            </button>\n          </button>\n        </div >\n\n\n      </div >\n\n\n\n\n\n\n      {/* PUBLIC */}\n      < div\n        style={{\n          border: '1px solid white',\n          borderRadius: '5px',\n          padding: '20px',\n          marginTop: '20px',\n        }}\n      >\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n          }}\n        >\n          <h1 style={{ fontWeight: 'bold' }}>PUBLIC</h1>\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            Ending in:{' '}\n            <div style={{ display: 'flex', marginLeft: '10px' }}>\n              <div\n                style={{\n                  background: 'blue',\n                  marginLeft: '7px',\n                  padding: '5px',\n                  borderRadius: '3px',\n                }}\n              >\n                {days1 < 10 ? `0${days1}` : days1}\n              </div>\n              <div\n                style={{\n                  background: 'blue',\n                  marginLeft: '7px',\n                  padding: '5px',\n                  borderRadius: '3px',\n                }}\n              >\n                {hours1 < 10 ? `0${hours1}` : hours1}\n              </div>\n              <div\n                style={{\n                  background: 'blue',\n                  marginLeft: '7px',\n                  padding: '5px',\n                  borderRadius: '3px',\n                }}\n              >\n                {minutes1 < 10 ? `0${minutes1}` : minutes1}\n              </div>\n              <div\n                style={{\n                  background: 'blue',\n                  marginLeft: '7px',\n                  padding: '5px',\n                  borderRadius: '3px',\n                }}\n              >\n                {seconds1 < 10 ? `0${seconds1}` : seconds1}\n\n              </div>\n            </div>\n          </div>\n        </div>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: '10px',\n          }}\n        >\n          <p>\n            Public mint! All users can mint\n\n            <br />10 per wallet • 0.02 SOL per NFT\n          </p>\n          <OutsideClickHandler onOutsideClick={handleOutsideClick}>\n            <button\n              style={{\n                background: 'blue',\n                borderRadius: '5px',\n                padding: '5px 7px',\n                color: 'white',\n              }}\n            >\n              Mint Now!\n            </button>\n          </OutsideClickHandler>\n        </div>\n      </div >\n\n      {/* <div id=\"wrapper\">\n        <div>\n          <p>Public Mint:</p>\n          <Button\n            style={{\n              width: '100%',\n              border: '1px solid #ccc',\n              marginTop: '10px',\n            }}\n            colorScheme=\"black\"\n            size=\"lg\"\n            onClick={() => buyFlys(mintAmount)}\n          >\n            {' '}\n            <Text></Text> MINT\n          </Button>\n        </div>\n        <div>\n          <p style={{ margin: '10px 0' }}>Allow List Mint:</p>\n          <Button\n            style={{ width: '100%' }}\n            disabled={!verfied}\n            colorScheme=\"black\"\n            size=\"lg\"\n            onClick={() => mintGiveawayFlys(mintAmount)}\n          >\n            {' '}\n            Whitelist Mint\n          </Button>\n        </div>\n      </div> */}\n    </div >\n  );\n}\n\nexport default ReCaptach;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Button, HStack, useToast } from '@chakra-ui/react';\nimport { disconnectWallet, connectWallet, getCurrentWalletConnected } from \"../utils/interact.js\";\nconst OutsideClickHandler = ({ children, onOutsideClick }) => {\n  const wrapperRef = useRef(null);\n\n  const handleClickOutside = (event) => {\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n      // Clicked outside the specified element\n      onOutsideClick();\n    }\n  };\n\n  useEffect(() => {\n    // Attach the event listener when the component mounts\n    document.addEventListener('mousedown', handleClickOutside);\n\n    // Detach the event listener when the component unmounts\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [handleClickOutside]);\n\n  return <div ref={wrapperRef}>{children}</div>;\n};\n\nfunction Nav({ }) {\n  const toast = useToast();\n  const [open, setOpen] = useState(false);\n  const [walletAddress, setWallet, setwalletAdrress] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const [tokenNumber, setTokenNumber] = useState(1);\n  const [status, setStatus] = useState(\"\");\n  const handleClose = () => setShow(false);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [totalSupply, setTotalSupply] = useState(0);\n  const handleShow = async () => {\n    setShow(true);\n  };\n\n  const onMintHandle = () => {\n    setStatus(\"Mint not allowed!\");\n  };\n\n  const decreaseTokenNumber = () => {\n    if (tokenNumber === 1) {\n      return;\n    }\n    setTokenNumber(tokenNumber - 1);\n  };\n\n  const onMintPressed = async () => {\n    const { status } = await connectWalletPressed(tokenNumber);\n    setStatus(status);\n  };\n\n\n  const handleIncrement = () => {\n    if (mintAmount < 5) {\n      setTotalSupply((prev) => prev + 1);\n    }\n  };\n  const handleDecrement = () => {\n    if (mintAmount > 0) {\n      setTotalSupply((prev) => prev - 1);\n    }\n  };\n  const handleOutsideClick = () => {\n    console.log('Clicked outside!');\n    setOpen(!open);\n    // Add your logic for handling clicks outside the element\n\n\n  };\n\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setWallet(walletResponse.address);\n  };\n  const disconnectWalletPressed = () => {\n    setwalletAdrress('null');\n    alert('disconnected');\n  };\n\n\n\n  return (\n    <div class=\"Aligner-item Aligner-item--top\">\n      <HStack flexDirection=\"column\">\n        <div\n          style={{\n            padding: '10px 20px',\n            width: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'end',\n          }}\n        >\n\n          {walletAddress !== '' ? (\n            <div style={{ position: 'relative' }}>\n              <Button\n                color=\"white\"\n                fontWeight=\"bold\"\n                fontSize=\"1.5rem\"\n                maxWidth=\"100%\"\n                colorScheme=\"purple\"\n                size=\"lg\"\n                onClick={() => setOpen(true)}\n              >\n                {/* Disconnect */}\n                {walletAddress?.slice(0, 6)}...\n                {walletAddress?.slice(walletAddress.length - 4, walletAddress.length)}\n              </Button>\n              {open && (\n                <div\n                  style={{\n                    position: 'absolute',\n                    left: 0,\n                    right: 0,\n                    top: '50px',\n                    background: 'black',\n                    padding: 10,\n                    border: '1px solid #ccc',\n                    borderRadius: '8px',\n                  }}\n                >\n                  <OutsideClickHandler onOutsideClick={handleOutsideClick}>\n                    <Button\n                      style={{ width: '100%' }}\n                      color=\"white\"\n                      fontWeight=\"bold\"\n                      fontSize=\"1.5rem\"\n                      maxWidth=\"100%\"\n                      colorScheme=\"purple\"\n                      size=\"lg\"\n                      onClick={() => disconnectWalletPressed()}\n                    >\n                      Disconnect\n                    </Button>\n                  </OutsideClickHandler>\n                </div>\n              )}\n            </div>\n          ) : (\n            <Button\n              colorScheme=\"purple\"\n              size=\"lg\"\n              onClick={() => connectWalletPressed()}\n            >\n              Select Wallet\n            </Button>\n          )}\n        </div>\n      </HStack>\n    </div>\n  );\n}\n\nexport default Nav;\n","import './App.css';\nimport Web3 from 'web3';\nimport MintingContract from './MintingContract.json';\nimport { useEffect, useState, useRef } from 'react';\nimport { image, headerText, collectionDescription } from './setting';\nimport styled from 'styled-components';\nimport { CiGlobe, CiTwitter } from 'react-icons/ci';\nimport { FaDiscord, FaGlobe, FaTwitter } from 'react-icons/fa';\nimport ReCaptach from './components/ReCaptach';\n// import { useWeb3React } from \"@web3-react/core\";\nimport { disconnectWallet, connectWallet, getCurrentWalletConnected } from \"./utils/interact.js\";\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport {\n  Center,\n  Box,\n  Head,\n  Image,\n  Button,\n  HStack,\n  VStack,\n  Heading,\n  Flex,\n  Link,\n  StackDivider,\n  Stack,\n  useToast,\n  Text,\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useMediaQuery,\n  Progress,\n} from '@chakra-ui/react';\nimport Nav from './components/Nav';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst OutsideClickHandler = ({ children, onOutsideClick }) => {\n  const wrapperRef = useRef(null);\n\n  const handleClickOutside = (event) => {\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n      // Clicked outside the specified element\n      onOutsideClick();\n    }\n  };\n\n  useEffect(() => {\n    // Attach the event listener when the component mounts\n    document.addEventListener('mousedown', handleClickOutside);\n\n    // Detach the event listener when the component unmounts\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [handleClickOutside]);\n\n  return <div ref={wrapperRef}>{children}</div>;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction App() {\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\n\n  const [isCaptchaVerified, setCaptchaVerified] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [walletAddress, setWallet, setwalletAdrress] = useState(\"\");\n\n  useEffect(() => {\n    const handleResize = () => {\n      setScreenWidth(window.innerWidth);\n    };\n\n    // Add event listener to update screen width on resize\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup the event listener on component unmount\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // metamask related function\n\n  const handleOutsideClick = () => {\n    console.log('Clicked outside!');\n    setOpen(!open);\n    // Add your logic for handling clicks outside the element\n  };\n\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setWallet(walletResponse.address);\n  };\n  const disconnectWalletPressed = () => {\n    setwalletAdrress('null');\n    alert('disconnected');\n  };\n\n\n\n\n\n\n\n\n\n\n  const Content = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    padding: 0px;\n    gap: 32px;\n    width: 100%;\n  `;\n\n  const InfoRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    width: 100%;\n    padding: 0;\n    gap: 16px;\n    flex-wrap: wrap;\n  `;\n  const InfoBox = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    padding: 10px 16px;\n    gap: 8px;\n    border: 2px solid #ffffff;\n    border-radius: 4px;\n    font-weight: 600;\n    font-size: 20px;\n    line-height: 100%;\n    text-transform: uppercase;\n    color: var(--white);\n\n    @media only screen and (max-width: 450px) {\n      font-size: 18px;\n    }\n  `;\n  const IconRow = styled.div`\n    display: flex;\n    justify-content: space-between;\n    flex-direction: row;\n    align-items: center;\n    padding: 0px;\n    gap: 24px;\n    margin-bottom: -3px;\n    margin-left: 1rem;\n  `;\n  const CollectionDescription = styled.p`\n    font-weight: 400;\n    font-size: 20px;\n    line-height: 150%;\n    margin-bottom: 1rem;\n  `;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  return (\n    <>\n\n      <main>\n        <style index>\n          {`\n            html {\n              height: 100%;\n              background: black; /* fallback for old browsers */\n            }\n            body {\n              // background: #673ab7; /* fallback for old browsers */\n              background: black; /* fallback for old browsers */\n            }\n          `}\n        </style>\n\n        <>\n\n          <HStack flexDirection=\"column\">\n            <div\n              style={{\n                padding: '10px 20px',\n                width: '100%',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'end',\n              }}\n            >\n\n              {walletAddress !== '' ? (\n                <div style={{ position: 'relative' }}>\n                  <Button\n                    color=\"white\"\n                    fontWeight=\"bold\"\n                    fontSize=\"1.5rem\"\n                    maxWidth=\"100%\"\n                    colorScheme=\"purple\"\n                    size=\"lg\"\n                    onClick={() => setOpen(true)}\n                  >\n                    {/* Disconnect */}\n                    {walletAddress?.slice(0, 6)}...\n                    {walletAddress?.slice(walletAddress.length - 4, walletAddress.length)}\n                  </Button>\n                  {open && (\n                    <div\n                      style={{\n                        position: 'absolute',\n                        left: 0,\n                        right: 0,\n                        top: '50px',\n                        background: 'black',\n                        padding: 10,\n                        border: '1px solid #ccc',\n                        borderRadius: '8px',\n                      }}\n                    >\n\n                      <OutsideClickHandler onOutsideClick={handleOutsideClick}>\n                        <Button\n                          className='button.wallet-adapter-button-trigger , button.wallet-adapter-button-trigger:hover , wallet-adapter-dropdown'\n                          style={{ width: '100%' }}\n                          color=\"white\"\n                          fontWeight=\"bold\"\n                          fontSize=\"1.5rem\"\n                          maxWidth=\"100%\"\n                          colorScheme=\"purple\"\n                          size=\"lg\"\n                          onClick={() => disconnectWalletPressed()}\n                        >\n                          Disconnect\n                        </Button>\n                      </OutsideClickHandler>\n                    </div>\n                  )}\n                </div>\n              ) : (\n                <Button\n                  colorScheme=\"purple\"\n                  size=\"lg\"\n                  onClick={() => disconnectWallet()}\n                >\n                  Select Wallet\n                </Button>\n              )}\n            </div>\n          </HStack>\n          <Flex\n            gap={screenWidth > 650 ? '20px' : '10px'}\n            marginBottom=\"20px\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            flexDirection={screenWidth < 1100 ? 'column' : 'row'}\n          >\n            <div>\n              <Flex\n                width=\"100%\"\n                maxWidth=\"600px\"\n                display=\"flex\"\n                flexDirection=\"column\"\n                justifyContent=\"center\"\n                color=\"white\"\n                // height=\"45rem\"\n                maxHeight=\"100%\"\n              >\n                <Flex>\n                  <Content>\n                    <Text\n                      alignItems=\"center\"\n                      justifyContent={'650px' ? 'center' : 'flex-start'}\n                      color=\"white\"\n                      fontSize={'650px' ? '8vh' : '3.5rem'}\n                      fontWeight=\"bold\"\n\n                    // style={{\n\n\n                    //   alignItems: 'center',\n                    //   justifyContent: '650px' ? 'center' : 'flex-start',\n                    //   fontSize: '650px' ? '7vh' : '3.5rem',\n                    //   fontWeight: 'bold',\n\n                    // }}\n                    >\n\n                      {headerText}\n                    </Text>\n                    <InfoRow>\n                      <></>\n\n                      <InfoBox>\n                        <p>Total items</p>\n                        <p> </p>\n                      </InfoBox>\n\n                      <IconRow>\n                        <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\n                          <FaGlobe></FaGlobe>\n                        </a>\n                        <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\n                          <FaTwitter></FaTwitter>\n                        </a>\n                        <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\n                          <FaDiscord></FaDiscord>\n                        </a>\n                      </IconRow>\n                    </InfoRow>\n                    <CollectionDescription>\n                      {collectionDescription}\n                    </CollectionDescription>\n                    <div style={{ width: '100%' }}>\n                      {walletAddress !== '' ? (\n                        null\n                      ) : (\n                        <Button\n                          style={{ width: '100%' }}\n                          colorScheme=\"purple\"\n                          size=\"lg\"\n                          onClick={() => connectWalletPressed()}\n                        >\n                          Select Wallet\n                        </Button>\n                      )}\n                    </div>\n                  </Content>\n                </Flex>\n\n                <Flex width=\"100%\" gap=\"20px\">\n\n                  <Stack\n                    divider={<StackDivider />}\n                    width=\"100%\"\n                    display=\"flex\"\n                    rounded={\"lg\"}\n                    pos={\"relative\"}\n                  >\n                    {isCaptchaVerified ? (\n                      < ReCaptach\n                      />\n                    ) : (\n                      <ReCAPTCHA\n                        sitekey={\n                          process.env.REACT_APP_RECAPTCHA_SITE_KEY ||\n                          \" 6Le4rSQpAAAAAMTiGCwY1nAPW0I6cKFrvLSXSsKK \"\n                        }\n                        onChange={(value) => {\n                          console.log(\"Captcha value:\", value);\n                          setCaptchaVerified(true);\n                        }}\n                      />\n\n                    )}\n                  </Stack>\n\n                </Flex>\n                {/* <Text marginBottom=\"30px\" width=\"100%\">\n                  Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                  Adipisci laudantium at, error reprehenderit minima\n                  repellendus! Eveniet voluptatem iusto repudiandae suscipit,\n                  expedita quibusdam quaerat officiis atque at ab libero, labore\n                  eaque!\n                </Text> */}\n                <Flex width=\"100%\" gap=\"20px\">\n                  <Stack\n                    divider={<StackDivider />}\n                    width=\"100%\"\n                    display=\"flex\"\n                    rounded={'lg'}\n                    pos={'relative'}\n                  ></Stack>\n                </Flex>\n              </Flex>\n            </div>\n            <div>\n              <Flex color=\"white\" flexDirection=\"column\">\n                <Image\n                  src={image}\n                  alt=\"project Image\"\n                  layout=\"responsive\"\n                  width={100}\n                  height={100}\n                  style={{\n                    minWidth: screenWidth < 650 ? '400px' : '500px',\n                    height: 'auto',\n                  }}\n                />\n              </Flex>\n            </div>\n          </Flex>\n        </>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","// Purpose: Contains texts that will be used in the UI when rendering the buttons\n// label has to be the exact same as in your candy machine config\n\nexport const mintText = [\n    { label: \"WL\", mintText: \"Only users who are whitelisted can mint!\", buttonLabel: \"Mint now!\", buttonDisabledLabel: \"Mint now!\", header: \"WL Mint\" },\n    { label: \"default\", mintText: \"default mint paying with SOL\", buttonLabel: \"Mint now!\", buttonDisabledLabel: \"Mint now!\", header: \"default Mint\" },\n    { label: \"Public\", mintText: \"Public mint! All users can mint\", buttonLabel: \"Mint now!\", buttonDisabledLabel: \"Mint now!\", header: \"public\" }\n];\n\n//header image in the ui. replace with your own\nexport const image = \"./display.gif\";\n\n//website title\nexport const headerText = \"COLLECTION NAME\";\nexport const collectionDescription = \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Rem minima velit aliquid voluptates quasi placeat corporis dicta maxime. Ad, similique. Veritatis corrupti eveniet eligendi ratione autem. Dolores cumque dolorem harum.\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider, ColorModeScript } from \"@chakra-ui/react\"\n\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <ChakraProvider>\n      <ColorModeScript initialColorMode=\"dark\" />\n\n      <App />\n    </ChakraProvider>\n  </React.StrictMode >,\n  document.getElementById(\"root\")\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}