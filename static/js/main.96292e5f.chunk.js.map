{"version":3,"sources":["utils/interact.js","components/ReCaptach.js","components/Nav.js","App.js","setting.js","reportWebVitals.js","index.js"],"names":["connectWallet","async","window","ethereum","alert","address","addressArray","request","method","err","message","ReCaptach","difference","moment","utc","Date","difference1","days","setDays","useState","hours","setHours","minutes","setMinutes","seconds","setSeconds","days1","setDays1","hours1","setHours1","minutes1","setMinutes1","seconds1","setSeconds1","text","setText","text1","setText1","text2","setText2","text3","setText3","verfied","setVerifed","useEffect","id","setTimeout","Math","floor","clearTimeout","walletAddress","setWallet","show","setShow","contract","setContract","undefined","tokenNumber","setTokenNumber","tokenNumber1","setTokenNumber1","status","setStatus","supply","setSupply","quantity","setQuantity","open","setOpen","osLink","setOsLink","ethAddress","setEthAddress","isOpen","onOpen","onClose","useDisclosure","latestTx","setlatestTx","decreaseTokenNumber","_jsxs","className","style","marginTop","children","border","borderRadius","padding","display","alignItems","justifyContent","_jsx","fontWeight","concat","marginLeft","background","Button","color","position","fontSize","left","onClick","number","value","methods","buyFlys","send","from","then","tx","console","log","transactionHash","to","events","Transfer","returnValues","tokenId","catch","type","Form","Label","Nav","OutsideClickHandler","_ref","onOutsideClick","wrapperRef","useRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","ref","App","screenWidth","setScreenWidth","innerWidth","isCaptchaVerified","setCaptchaVerified","setwalletAdrress","handleResize","connectWalletPressed","walletResponse","Content","styled","div","_templateObject","_taggedTemplateLiteral","InfoRow","_templateObject2","InfoBox","_templateObject3","IconRow","_templateObject4","CollectionDescription","p","_templateObject5","_Fragment","index","HStack","flexDirection","width","maxWidth","colorScheme","size","slice","length","right","top","handleOutsideClick","Flex","gap","marginBottom","maxHeight","Text","href","rel","FaGlobe","FaTwitter","FaDiscord","Stack","divider","StackDivider","rounded","pos","ReCAPTCHA","sitekey","process","REACT_APP_RECAPTCHA_SITE_KEY","onChange","Image","src","alt","layout","height","minWidth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","ChakraProvider","ColorModeScript","initialColorMode","getElementById"],"mappings":"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","file":"static/js/main.96292e5f.chunk.js","sourcesContent":["export const connectWallet = async () => {\r\n  if (window.ethereum) {\r\n    try {\r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n      const obj = {\r\n        address: addressArray[0],\r\n      };\r\n      return obj;\r\n    } catch (err) {\r\n      alert(err.message);\r\n      return {\r\n        address: \"\",\r\n      };\r\n    }\r\n  } else {\r\n    alert(\"Metamask is not installed!\");\r\n    return {\r\n      address: \"\",\r\n    };\r\n  }\r\n};\r\nexport const disconnectWallet = async () => {\r\n  await window.ethereum.request({\r\n    method: \"eth_requestAccounts\",\r\n    params: [{ eth_accounts: {} }]\r\n  })\r\n};\r\nexport const getCurrentWalletConnected = async () => {\r\n  if (window.ethereum) {\r\n    try {\r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_accounts\",\r\n      });\r\n      if (addressArray.length > 0) {\r\n        return {\r\n          address: addressArray[0],\r\n        };\r\n      } else {\r\n        return {\r\n          address: \"\",\r\n        };\r\n      }\r\n    } catch (err) {\r\n      return {\r\n        address: \"\",\r\n      };\r\n    }\r\n  } else {\r\n    return {\r\n      address: \"\",\r\n    };\r\n  }\r\n};\r\n\r\n","import React, { useEffect, useState, useRef } from 'react';\nimport Web3 from 'web3';\nimport moment from 'moment';\nimport Form from \"react-bootstrap/Form\";\nimport MintingContract from '../MintingContract.json';\nimport { disconnectWallet, connectWallet, getCurrentWalletConnected } from \"../utils/interact.js\";\nimport {\n  Center,\n  Box,\n  Head,\n  Image,\n  Button,\n  HStack,\n  VStack,\n  Heading,\n  Flex,\n  Link,\n  Card,\n  CardBody,\n  StackDivider,\n  Stack,\n  useToast,\n  Text,\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useMediaQuery,\n  Progress,\n} from '@chakra-ui/react';\n\nconst OutsideClickHandler = ({ children, onOutsideClick }) => {\n  const wrapperRef = useRef(null);\n\n  const handleClickOutside = (event) => {\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n      // Clicked outside the specified element\n      onOutsideClick();\n    }\n  };\n\n  useEffect(() => {\n    // Attach the event listener when the component mounts\n    document.addEventListener('mousedown', handleClickOutside);\n\n    // Detach the event listener when the component unmounts\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [handleClickOutside]);\n\n  return <div ref={wrapperRef}>{children}</div>;\n};\n\n\n\n\n\n\n\nconst ReCaptach = () => {\n  const difference = +new moment('2024-12-16 23:30').utc() - +new Date();\n  const difference1 = +new moment('2023-12-16 05:30').utc() - +new Date();\n  const [days, setDays] = useState(0);\n  const [hours, setHours] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [days1, setDays1] = useState(0);\n  const [hours1, setHours1] = useState(0);\n  const [minutes1, setMinutes1] = useState(0);\n  const [seconds1, setSeconds1] = useState(0);\n  const [text, setText] = useState(0);\n  const [text1, setText1] = useState(0);\n  const [text2, setText2] = useState(0);\n  const [text3, setText3] = useState(0);\n  const [verfied, setVerifed] = useState(false);\n\n\n\n\n  useEffect(() => {\n    const id = setTimeout(() => {\n\n      if (difference > 0) {\n        setDays(Math.floor(difference / (1000 * 60 * 60 * 24)));\n        setHours(Math.floor((difference / (1000 * 60 * 60)) % 24));\n        setMinutes(Math.floor((difference / 1000 / 60) % 60));\n        setSeconds(Math.floor((difference / 1000) % 60));\n        setText(\"Ending in: \");\n\n      }\n      else {\n        setText1(\" Mints Ended\");\n\n      }\n\n      if (difference1 > 0) {\n        setDays1(Math.floor(difference1 / (1000 * 60 * 60 * 24)));\n        setHours1(Math.floor((difference1 / (1000 * 60 * 60)) % 24));\n        setMinutes1(Math.floor((difference1 / 1000 / 60) % 60));\n        setSeconds1(Math.floor((difference1 / 1000) % 60));\n        setText2(\"Ending in: \");\n\n      }\n      else {\n        setText3(\"Mint Ended: \");\n      }\n\n    }, 1000);\n\n\n\n    return () => {\n      clearTimeout(id);\n\n    };\n  });\n\n\n\n\n  //recaptcha function\n  function onChange(value) {\n    console.log('Captcha value:', value);\n    setVerifed(true);\n  }\n\n  const CONTRACT_ADDRESS = '0x77C9e7733550026AcE28950e973681C0F74191E3';\n  const [walletAddress, setWallet] = useState(\"\");\n  const [show, setShow] = useState(\"false\");\n  const [contract, setContract] = useState(undefined);\n  const [tokenNumber, setTokenNumber] = useState(1);\n  const [tokenNumber1, setTokenNumber1] = useState(1);\n  const [status, setStatus] = useState(\"\");\n  const publicsale = true;\n  const [supply, setSupply] = useState(0);\n  const [quantity, setQuantity] = useState(0);\n  const [open, setOpen] = useState(false);\n  const handleClose = () => setShow(false);\n  const publicsale_price = 30000000000000000;\n  const [osLink, setOsLink] = useState('');\n  const [ethAddress, setEthAddress] = useState('');\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [latestTx, setlatestTx] = useState('');\n  const handleShow = async () => {\n    setShow(true);\n  };\n\n  const onMintHandle = () => {\n    setStatus(\"Mint not allowed!\");\n  };\n\n  const decreaseTokenNumber = () => {\n    if (tokenNumber === 1) {\n      return;\n    }\n    setTokenNumber(tokenNumber - 1);\n\n    if (tokenNumber1 === 1) {\n      return;\n    }\n    setTokenNumber1(tokenNumber - 1);\n  };\n\n  const onMintPressed = async () => {\n    const { status } = await (tokenNumber);\n    setStatus(status);\n  };\n\n\n\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setWallet(walletResponse.address);\n  };\n\n  const handleIncrement = () => {\n    if (quantity < 5) {\n      setQuantity((prev) => prev + 1);\n    }\n  };\n  const handleDecrement = () => {\n    if (quantity > 0) {\n      setQuantity((prev) => prev - 1);\n    }\n  };\n\n  const handleOutsideClick = () => {\n    console.log('Clicked outside!');\n    setOpen(!open);\n    // Add your logic for handling clicks outside the element\n  };\n\n\n  const loadBlockchain = async () => {\n    let provider = window.ethereum;\n    const web3 = new Web3(provider);\n\n    const contract = new web3.eth.Contract(\n      MintingContract.abi,\n      CONTRACT_ADDRESS\n    );\n    setContract(contract);\n  };\n\n  const buyFlys = (number) => {\n    if (contract !== undefined && ethAddress !== '') {\n      var value = number * 20000000;\n\n      contract.methods\n        .buyFlys(number)\n        .send({ from: ethAddress, value: value })\n        .then((tx) => {\n          console.log(tx);\n          setlatestTx(tx.transactionHash);\n          setOsLink(\n            'https://opensea.io/assets/' +\n            tx.to +\n            '/' +\n            tx.events.Transfer.returnValues.tokenId\n          );\n          console.log(osLink);\n          onOpen();\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n\n\n\n\n  return (\n    <div className=\"container,display\" style={{ marginTop: 10 }}>\n\n      <div\n        style={{\n          border: '1px solid white',\n          borderRadius: '5px',\n          padding: '20px',\n        }}\n      >\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n          }}\n        >\n          <h1 style={{ fontWeight: 'bold' }}>WL MINT</h1>\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            {` ${text} ` ? ` ${text} ` : ` ${text1} `}\n            <div style={{ display: 'flex', marginLeft: '10px' }}>\n              <div\n                style={{\n                  background: 'blue',\n                  marginLeft: '7px',\n                  padding: '5px',\n                  borderRadius: '3px',\n                }}\n              >\n\n                {days < 10 ? `0${days}` : days}\n\n              </div>\n              <div\n                style={{\n                  background: 'blue',\n                  marginLeft: '7px',\n                  padding: '5px',\n                  borderRadius: '3px',\n                }}\n              >\n                {hours < 10 ? `0${hours}` : hours}\n\n              </div>\n              <div\n                style={{\n                  background: 'blue',\n                  marginLeft: '7px',\n                  padding: '5px',\n                  borderRadius: '3px',\n                }}\n              >\n                {minutes < 10 ? `0${minutes}` : minutes}\n\n              </div>\n              <div\n                style={{\n                  background: 'blue',\n                  marginLeft: '7px',\n                  padding: '5px',\n                  borderRadius: '3px',\n                }}\n              >\n                {seconds < 10 ? `0${seconds}` : seconds}\n\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n        <div\n\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: '10px',\n          }}\n        >\n          <p>\n            Only users who are Whitelisted can mint!\n            <br />5 per wallet 0.01 SOL per NFT\n          </p>\n\n\n          <div className=\"mint-number\"\n\n          >\n\n            {<Button\n              style={{\n                background: 'blue',\n                borderRadius: '5px',\n                padding: '5px 7px',\n                color: 'white',\n                position: 'relative',\n                fontSize: '1rem',\n                left: '140px',\n\n              }}\n              onClick={() => buyFlys()}\n            >\n\n              Mint Now!\n            </Button>}\n\n            <button type=\"button\" onClick={decreaseTokenNumber}>\n              <span aria-hidden=\"true\">-</span>\n            </button>\n            <Form>\n              <Form.Label>{tokenNumber}</Form.Label>\n              {status ? <div>{status}</div> : <div></div>}\n            </Form>\n            {tokenNumber < 5 ? (\n              <button\n                type=\"button\"\n                onClick={() => setTokenNumber(tokenNumber + 1)}\n              >\n                <span aria-hidden=\"true\">+</span>\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                onClick={() => setTokenNumber(tokenNumber)}\n              >\n                <span aria-hidden=\"true\">+</span>\n              </button>\n\n            )}\n          </div>\n\n        </div >\n\n\n      </div >\n\n\n\n\n\n\n      {/* PUBLIC */}\n      < div\n        style={{\n          border: '1px solid white',\n          borderRadius: '5px',\n          padding: '20px',\n          marginTop: '20px',\n        }}\n      >\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n          }}\n        >\n          <h1 style={{ fontWeight: 'bold' }}>PUBLIC</h1>\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            {text2 ? text2 : text3}\n            <div style={{ display: 'flex', marginLeft: '10px' }}>\n              <div\n                style={{\n                  background: 'blue',\n                  marginLeft: '7px',\n                  padding: '5px',\n                  borderRadius: '3px',\n                }}\n              >\n                {days1 < 10 ? `0${days1}` : days1}\n              </div>\n              <div\n                style={{\n                  background: 'blue',\n                  marginLeft: '7px',\n                  padding: '5px',\n                  borderRadius: '3px',\n                }}\n              >\n                {hours1 < 10 ? `0${hours1}` : hours1}\n              </div>\n              <div\n                style={{\n                  background: 'blue',\n                  marginLeft: '7px',\n                  padding: '5px',\n                  borderRadius: '3px',\n                }}\n              >\n                {minutes1 < 10 ? `0${minutes1}` : minutes1}\n              </div>\n              <div\n                style={{\n                  background: 'blue',\n                  marginLeft: '7px',\n                  padding: '5px',\n                  borderRadius: '3px',\n                }}\n              >\n                {seconds1 < 10 ? `0${seconds1}` : seconds1}\n\n              </div>\n            </div>\n          </div>\n        </div>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: '10px',\n          }}\n        >\n          <p>\n            Public mint! All users can mint\n\n            <br />10 per wallet • 0.02 SOL per NFT\n          </p>\n\n          <div className=\"mint-number\"\n\n          >\n\n            {<button\n              style={{\n                background: 'blue',\n                borderRadius: '5px',\n                padding: '5px 7px',\n                color: 'white',\n                position: 'relative',\n                fontSize: '1rem',\n                left: '140px',\n\n              }}\n\n            >\n\n              Mint Now!\n            </button>}\n\n            <button type=\"button\" onClick={decreaseTokenNumber}>\n              <span aria-hidden=\"true\">-</span>\n            </button>\n            <Form>\n              <Form.Label>{tokenNumber1}</Form.Label>\n              {status ? <div>{status}</div> : <div></div>}\n            </Form>\n            {tokenNumber1 < 10 ? (\n              <button\n                type=\"button\"\n                onClick={() => setTokenNumber1(tokenNumber1 + 1)}\n              >\n                <span aria-hidden=\"true\">+</span>\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                onClick={() => setTokenNumber1(tokenNumber1)}\n              >\n                <span aria-hidden=\"true\">+</span>\n              </button>\n\n            )}\n          </div>\n        </div>\n      </div >\n    </div >\n  );\n}\n\nexport default ReCaptach;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Button, HStack, useToast } from '@chakra-ui/react';\nimport { disconnectWallet, connectWallet, getCurrentWalletConnected } from \"../utils/interact.js\";\nconst OutsideClickHandler = ({ children, onOutsideClick }) => {\n  const wrapperRef = useRef(null);\n\n  const handleClickOutside = (event) => {\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n      // Clicked outside the specified element\n      onOutsideClick();\n    }\n  };\n\n  useEffect(() => {\n    // Attach the event listener when the component mounts\n    document.addEventListener('mousedown', handleClickOutside);\n\n    // Detach the event listener when the component unmounts\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [handleClickOutside]);\n\n  return <div ref={wrapperRef}>{children}</div>;\n};\n\nfunction Nav({ }) {\n  const toast = useToast();\n  const [open, setOpen] = useState(false);\n  const [walletAddress, setWallet, setwalletAdrress] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const [tokenNumber, setTokenNumber] = useState(1);\n  const [status, setStatus] = useState(\"\");\n  const handleClose = () => setShow(false);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [totalSupply, setTotalSupply] = useState(0);\n  const handleShow = async () => {\n    setShow(true);\n  };\n\n  const onMintHandle = () => {\n    setStatus(\"Mint not allowed!\");\n  };\n\n  const decreaseTokenNumber = () => {\n    if (tokenNumber === 1) {\n      return;\n    }\n    setTokenNumber(tokenNumber - 1);\n  };\n\n  const onMintPressed = async () => {\n    const { status } = await connectWalletPressed(tokenNumber);\n    setStatus(status);\n  };\n\n\n  const handleIncrement = () => {\n    if (mintAmount < 5) {\n      setTotalSupply((prev) => prev + 1);\n    }\n  };\n  const handleDecrement = () => {\n    if (mintAmount > 0) {\n      setTotalSupply((prev) => prev - 1);\n    }\n  };\n  const handleOutsideClick = () => {\n    console.log('Clicked outside!');\n    setOpen(!open);\n    // Add your logic for handling clicks outside the element\n\n\n  };\n\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setWallet(walletResponse.address);\n  };\n  const disconnectWalletPressed = () => {\n    setwalletAdrress('null');\n    alert('disconnected');\n  };\n\n\n\n  return (\n    <div class=\"Aligner-item Aligner-item--top\">\n      <HStack flexDirection=\"column\">\n        <div\n          style={{\n            padding: '10px 20px',\n            width: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'end',\n          }}\n        >\n\n          {walletAddress !== '' ? (\n            <div style={{ position: 'relative' }}>\n              <Button\n                color=\"white\"\n                fontWeight=\"bold\"\n                fontSize=\"1.5rem\"\n                maxWidth=\"100%\"\n                colorScheme=\"purple\"\n                size=\"lg\"\n                onClick={() => setOpen(true)}\n              >\n                {/* Disconnect */}\n                {walletAddress?.slice(0, 6)}...\n                {walletAddress?.slice(walletAddress.length - 4, walletAddress.length)}\n              </Button>\n              {open && (\n                <div\n                  style={{\n                    position: 'absolute',\n                    left: 0,\n                    right: 0,\n                    top: '50px',\n                    background: 'black',\n                    padding: 10,\n                    border: '1px solid #ccc',\n                    borderRadius: '8px',\n                  }}\n                >\n                  <OutsideClickHandler onOutsideClick={handleOutsideClick}>\n                    <Button\n                      style={{ width: '100%' }}\n                      color=\"white\"\n                      fontWeight=\"bold\"\n                      fontSize=\"1.5rem\"\n                      maxWidth=\"100%\"\n                      colorScheme=\"purple\"\n                      size=\"lg\"\n                      onClick={() => disconnectWalletPressed()}\n                    >\n                      Disconnect\n                    </Button>\n                  </OutsideClickHandler>\n                </div>\n              )}\n            </div>\n          ) : (\n            <Button\n              colorScheme=\"purple\"\n              size=\"lg\"\n              onClick={() => connectWalletPressed()}\n            >\n              Select Wallet\n            </Button>\n          )}\n        </div>\n      </HStack>\n    </div>\n  );\n}\n\nexport default Nav;\n","import './App.css';\nimport Web3 from 'web3';\nimport MintingContract from './MintingContract.json';\nimport { useEffect, useState, useRef } from 'react';\nimport { image, headerText, collectionDescription } from './setting';\nimport styled from 'styled-components';\nimport { CiGlobe, CiTwitter } from 'react-icons/ci';\nimport { FaDiscord, FaGlobe, FaTwitter } from 'react-icons/fa';\nimport ReCaptach from './components/ReCaptach';\n// import { useWeb3React } from \"@web3-react/core\";\nimport { disconnectWallet, connectWallet, getCurrentWalletConnected } from \"./utils/interact.js\";\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport {\n  Center,\n  Box,\n  Head,\n  Image,\n  Button,\n  HStack,\n  VStack,\n  Heading,\n  Flex,\n  Link,\n  StackDivider,\n  Stack,\n  useToast,\n  Text,\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useMediaQuery,\n  Progress,\n} from '@chakra-ui/react';\nimport Nav from './components/Nav';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst OutsideClickHandler = ({ children, onOutsideClick }) => {\n  const wrapperRef = useRef(null);\n\n  const handleClickOutside = (event) => {\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n      // Clicked outside the specified element\n      onOutsideClick();\n    }\n  };\n\n  useEffect(() => {\n    // Attach the event listener when the component mounts\n    document.addEventListener('mousedown', handleClickOutside);\n\n    // Detach the event listener when the component unmounts\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [handleClickOutside]);\n\n  return <div ref={wrapperRef}>{children}</div>;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction App() {\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\n\n  const [isCaptchaVerified, setCaptchaVerified] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [walletAddress, setWallet, setwalletAdrress] = useState(\"\");\n\n  useEffect(() => {\n    const handleResize = () => {\n      setScreenWidth(window.innerWidth);\n    };\n\n    // Add event listener to update screen width on resize\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup the event listener on component unmount\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // metamask related function\n\n  const handleOutsideClick = () => {\n    console.log('Clicked outside!');\n    setOpen(!open);\n    // Add your logic for handling clicks outside the element\n  };\n\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setWallet(walletResponse.address);\n  };\n  const disconnectWalletPressed = () => {\n    setwalletAdrress('null');\n    alert('disconnected');\n  };\n\n\n\n\n\n\n\n\n\n\n  const Content = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    padding: 0px;\n    gap: 32px;\n    width: 100%;\n  `;\n\n  const InfoRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    width: 100%;\n    padding: 0;\n    gap: 16px;\n    flex-wrap: wrap;\n  `;\n  const InfoBox = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    padding: 10px 16px;\n    gap: 8px;\n    border: 2px solid #ffffff;\n    border-radius: 4px;\n    font-weight: 600;\n    font-size: 20px;\n    line-height: 100%;\n    text-transform: uppercase;\n    color: var(--white);\n\n    @media only screen and (max-width: 450px) {\n      font-size: 18px;\n    }\n  `;\n  const IconRow = styled.div`\n    display: flex;\n    justify-content: space-between;\n    flex-direction: row;\n    align-items: center;\n    padding: 0px;\n    gap: 24px;\n    margin-bottom: -3px;\n    margin-left: 1rem;\n  `;\n  const CollectionDescription = styled.p`\n    font-weight: 400;\n    font-size: 20px;\n    line-height: 150%;\n    margin-bottom: 1rem;\n  `;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  return (\n    <>\n\n      <main>\n        <style index>\n          {`\n            html {\n              height: 100%;\n              background: black; /* fallback for old browsers */\n            }\n            body {\n              // background: #673ab7; /* fallback for old browsers */\n              background: black; /* fallback for old browsers */\n            }\n          `}\n        </style>\n\n        <>\n\n          <HStack flexDirection=\"column\">\n            <div\n              style={{\n                padding: '10px 20px',\n                width: '100%',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'end',\n              }}\n            >\n\n              {walletAddress !== '' ? (\n                <div style={{ position: 'relative' }}>\n                  <Button\n                    color=\"white\"\n                    fontWeight=\"bold\"\n                    fontSize=\"1.5rem\"\n                    maxWidth=\"100%\"\n                    colorScheme=\"purple\"\n                    size=\"lg\"\n                    onClick={() => setOpen(true)}\n                  >\n                    {/* Disconnect */}\n                    {walletAddress?.slice(0, 6)}...\n                    {walletAddress?.slice(walletAddress.length - 4, walletAddress.length)}\n                  </Button>\n                  {open && (\n                    <div\n                      style={{\n                        position: 'absolute',\n                        left: 0,\n                        right: 0,\n                        top: '50px',\n                        background: 'black',\n                        padding: 10,\n                        border: '1px solid #ccc',\n                        borderRadius: '8px',\n                      }}\n                    >\n\n                      <OutsideClickHandler onOutsideClick={handleOutsideClick}>\n                        <Button\n                          className='button.wallet-adapter-button-trigger , button.wallet-adapter-button-trigger:hover , wallet-adapter-dropdown'\n                          style={{ width: '100%' }}\n                          color=\"white\"\n                          fontWeight=\"bold\"\n                          fontSize=\"1.5rem\"\n                          maxWidth=\"100%\"\n                          colorScheme=\"purple\"\n                          size=\"lg\"\n                          onClick={() => disconnectWalletPressed()}\n                        >\n                          Disconnect\n                        </Button>\n                      </OutsideClickHandler>\n                    </div>\n                  )}\n                </div>\n              ) : (\n\n                isCaptchaVerified ? (\n                  <Button\n\n                    colorScheme=\"purple\"\n                    size=\"lg\"\n                    onClick={() => connectWalletPressed()}\n                  >\n                    Select Wallet\n                  </Button>\n\n                ) : (\n\n                  null\n\n                )\n\n\n              )}\n            </div>\n          </HStack>\n          <Flex\n            gap={screenWidth > 650 ? '20px' : '10px'}\n            marginBottom=\"20px\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            flexDirection={screenWidth < 1100 ? 'column' : 'row'}\n          >\n            <div>\n              <Flex\n                width=\"100%\"\n                maxWidth=\"600px\"\n                display=\"flex\"\n                flexDirection=\"column\"\n                justifyContent=\"center\"\n                color=\"white\"\n                // height=\"45rem\"\n                maxHeight=\"100%\"\n              >\n                <Flex>\n                  <Content>\n                    <Text\n                      alignItems=\"center\"\n                      justifyContent={'650px' ? 'center' : 'flex-start'}\n                      color=\"white\"\n                      fontSize={'650px' ? '8vh' : '3.5rem'}\n                      fontWeight=\"bold\"\n\n                    >\n\n                      {headerText}\n                    </Text>\n                    <InfoRow>\n                      <></>\n\n                      <InfoBox>\n                        <p>Total items</p>\n                        <p> </p>\n                      </InfoBox>\n\n                      <IconRow>\n                        <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\n                          <FaGlobe></FaGlobe>\n                        </a>\n                        <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\n                          <FaTwitter></FaTwitter>\n                        </a>\n                        <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\n                          <FaDiscord></FaDiscord>\n                        </a>\n                      </IconRow>\n                    </InfoRow>\n                    <CollectionDescription>\n                      {collectionDescription}\n                    </CollectionDescription>\n                    {isCaptchaVerified ? (\n                      <div style={{ width: '100%' }}>\n                        {walletAddress !== '' ? (\n                          null\n                        ) : (\n                          <Button\n                            style={{ width: '100%' }}\n                            colorScheme=\"purple\"\n                            size=\"lg\"\n                            onClick={() => connectWalletPressed()}\n                          >\n                            Select Wallet\n\n                          </Button>\n\n                        )}\n\n                        {/* <ReCAPTCHA\n                          sitekey={\n                            process.env.REACT_APP_RECAPTCHA_SITE_KEY ||\n                            \" 6Le4rSQpAAAAAMTiGCwY1nAPW0I6cKFrvLSXSsKK \"\n                          }\n                          onChange={(value) => {\n                            console.log(\"Captcha value:\", value);\n                            setCaptchaVerified(true);\n                          }}\n                        /> */}\n                      </div>\n                    ) : (\n                      null\n                    )}\n\n                  </Content>\n                </Flex>\n\n                <Flex width=\"100%\" gap=\"20px\">\n\n                  <Stack\n                    divider={<StackDivider />}\n                    width=\"100%\"\n                    display=\"flex\"\n                    rounded={\"lg\"}\n                    pos={\"relative\"}\n                  >\n\n                    {isCaptchaVerified ? (\n                      <\n                        ReCaptach\n                      />\n\n\n                    ) : (\n                      <ReCAPTCHA\n                        sitekey={\n                          process.env.REACT_APP_RECAPTCHA_SITE_KEY ||\n                          \" 6Le4rSQpAAAAAMTiGCwY1nAPW0I6cKFrvLSXSsKK \"\n                        }\n                        onChange={(value) => {\n                          console.log(\"Captcha value:\", value);\n                          setCaptchaVerified(true);\n                        }}\n                      />\n\n                    )}\n                  </Stack>\n\n                </Flex>\n                {/* <Text marginBottom=\"30px\" width=\"100%\">\n                  Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                  Adipisci laudantium at, error reprehenderit minima\n                  repellendus! Eveniet voluptatem iusto repudiandae suscipit,\n                  expedita quibusdam quaerat officiis atque at ab libero, labore\n                  eaque!\n                </Text> */}\n                <Flex width=\"100%\" gap=\"20px\">\n                  <Stack\n                    divider={<StackDivider />}\n                    width=\"100%\"\n                    display=\"flex\"\n                    rounded={'lg'}\n                    pos={'relative'}\n                  ></Stack>\n                </Flex>\n              </Flex>\n            </div>\n            <div>\n              <Flex color=\"white\" flexDirection=\"column\">\n                <Image\n                  src={image}\n                  alt=\"project Image\"\n                  layout=\"responsive\"\n                  width={100}\n                  height={100}\n                  style={{\n                    minWidth: screenWidth < 650 ? '400px' : '500px',\n                    height: 'auto',\n                  }}\n                />\n              </Flex>\n            </div>\n          </Flex>\n        </>\n      </main >\n    </>\n  );\n}\n\nexport default App;\n","// Purpose: Contains texts that will be used in the UI when rendering the buttons\n// label has to be the exact same as in your candy machine config\n\nexport const mintText = [\n    { label: \"WL\", mintText: \"Only users who are whitelisted can mint!\", buttonLabel: \"Mint now!\", buttonDisabledLabel: \"Mint now!\", header: \"WL Mint\" },\n    { label: \"default\", mintText: \"default mint paying with SOL\", buttonLabel: \"Mint now!\", buttonDisabledLabel: \"Mint now!\", header: \"default Mint\" },\n    { label: \"Public\", mintText: \"Public mint! All users can mint\", buttonLabel: \"Mint now!\", buttonDisabledLabel: \"Mint now!\", header: \"public\" }\n];\n\n//header image in the ui. replace with your own\nexport const image = \"./display.gif\";\n\n//website title\nexport const headerText = \"COLLECTION NAME\";\nexport const collectionDescription = \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Rem minima velit aliquid voluptates quasi placeat corporis dicta maxime. Ad, similique. Veritatis corrupti eveniet eligendi ratione autem. Dolores cumque dolorem harum.\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider, ColorModeScript } from \"@chakra-ui/react\"\n\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <ChakraProvider>\n      <ColorModeScript initialColorMode=\"dark\" />\n\n      <App />\n    </ChakraProvider>\n  </React.StrictMode >,\n  document.getElementById(\"root\")\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}